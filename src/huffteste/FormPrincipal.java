package huffteste;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import ExternalResources.HuffmanProgram;
import ExternalResources.JobsQueue;
import Renderers.JobRenderer;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListCellRenderer;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import models.HuffJob;
import util.DragDrop;
import java.util.List;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Lucas
 */
public class FormPrincipal extends javax.swing.JFrame {

    int progress = 0;
    JFileChooser fchooser;
    JTextField field;
    JButton b;
    JobsQueue jq;

    public FormPrincipal() {
        initComponents();
        setResizable(false);
        setProgress(0);
        setTitle("HuffHuff");
        fchooser = new JFileChooser();
        fchooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jq = new JobsQueue(this);
        lm = new DefaultListModel();
        jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jList1.setModel((ListModel) lm);
        jList1.setCellRenderer((ListCellRenderer) new JobRenderer());
        jList1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                JList list = (JList) evt.getSource();
                Rectangle r = list.getCellBounds(0, list.getLastVisibleIndex());
                if (r != null && r.contains(evt.getPoint()) && evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1) {
                    int idx = list.getSelectedIndex();
                    HuffmanProgram hp = lm.getElementAt(idx);
                    new FormDetalhes(hp).setVisible(true);
                }
            }
        });
        setDropTarget(new DragDrop(this, 'c'));
        btnCompress.setDropTarget(new DragDrop(this, 'c'));
        btnDecompress.setDropTarget(new DragDrop(this, 'd'));
        List<Integer> threadsDisponiveis = IntStream.rangeClosed(1, Runtime.getRuntime().availableProcessors()).boxed().collect(Collectors.toList());
        jComboBox1.setModel(new DefaultComboBoxModel(threadsDisponiveis.toArray()));
        jComboBox1.setSelectedIndex(0);
        jq.setSlots(1);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        folderChooser = new javax.swing.JFileChooser();
        lblThreads = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        labelSelectFile = new javax.swing.JLabel();
        txtFileOriginPath = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        lblLogo = new javax.swing.JLabel();
        btnDecompress = new javax.swing.JLabel();
        btnCompress = new javax.swing.JLabel();
        btnBrowseDestination = new javax.swing.JLabel();
        txtDestination = new javax.swing.JTextField();
        lblSelectDestination = new javax.swing.JLabel();
        lblProgressBar = new javax.swing.JLabel();
        btnBrowseFile = new javax.swing.JLabel();
        lblBgSelectFile = new javax.swing.JLabel();
        lblProgressBarBg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblQueueBg = new javax.swing.JLabel();
        lblGalo = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(java.awt.Color.magenta);
        setMinimumSize(new java.awt.Dimension(850, 425));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblThreads.setFont(new java.awt.Font("Berlin Sans FB", 0, 21)); // NOI18N
        lblThreads.setForeground(new java.awt.Color(255, 255, 255));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("huffteste/Bundle"); // NOI18N
        lblThreads.setText(bundle.getString("FormPrincipal.lblThreads.text")); // NOI18N
        getContentPane().add(lblThreads, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, 30));

        labelSelectFile.setFont(new java.awt.Font("Berlin Sans FB", 0, 21)); // NOI18N
        labelSelectFile.setForeground(new java.awt.Color(255, 255, 255));
        labelSelectFile.setText(bundle.getString("FormPrincipal.labelSelectFile.text")); // NOI18N
        getContentPane().add(labelSelectFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        txtFileOriginPath.setText(bundle.getString("FormPrincipal.txtFileOriginPath.text")); // NOI18N
        getContentPane().add(txtFileOriginPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 520, 23));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(166, 96));
        jScrollPane2.setViewportView(jList1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(587, 153, 254, 271));

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N
        lblLogo.setText(bundle.getString("FormPrincipal.lblLogo.text")); // NOI18N
        getContentPane().add(lblLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 10, 312, 60));

        btnDecompress.setBackground(new java.awt.Color(204, 204, 204));
        btnDecompress.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        btnDecompress.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnDecompress.setText(bundle.getString("FormPrincipal.btnDecompress.text")); // NOI18N
        btnDecompress.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnDecompress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        btnDecompress.setOpaque(true);
        btnDecompress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDecompressMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDecompressMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDecompressMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnDecompressMouseReleased(evt);
            }
        });
        getContentPane().add(btnDecompress, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, 120, 23));

        btnCompress.setBackground(new java.awt.Color(204, 204, 204));
        btnCompress.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        btnCompress.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCompress.setText(bundle.getString("FormPrincipal.btnCompress.text")); // NOI18N
        btnCompress.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnCompress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        btnCompress.setOpaque(true);
        btnCompress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCompressMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCompressMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCompressMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCompressMouseReleased(evt);
            }
        });
        getContentPane().add(btnCompress, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 110, 23));
        btnCompress.getAccessibleContext().setAccessibleName(bundle.getString("FormPrincipal.btnCompress.AccessibleContext.accessibleName")); // NOI18N

        btnBrowseDestination.setBackground(new java.awt.Color(204, 204, 204));
        btnBrowseDestination.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        btnBrowseDestination.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBrowseDestination.setText(bundle.getString("FormPrincipal.btnBrowseDestination.text")); // NOI18N
        btnBrowseDestination.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnBrowseDestination.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        btnBrowseDestination.setOpaque(true);
        btnBrowseDestination.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBrowseDestinationMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBrowseDestinationMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBrowseDestinationMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBrowseDestinationMouseReleased(evt);
            }
        });
        getContentPane().add(btnBrowseDestination, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 250, 90, 22));

        txtDestination.setText(bundle.getString("FormPrincipal.txtDestination.text")); // NOI18N
        getContentPane().add(txtDestination, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 520, 23));

        lblSelectDestination.setFont(new java.awt.Font("Berlin Sans FB", 0, 21)); // NOI18N
        lblSelectDestination.setForeground(new java.awt.Color(255, 255, 255));
        lblSelectDestination.setText(bundle.getString("FormPrincipal.lblSelectDestination.text")); // NOI18N
        getContentPane().add(lblSelectDestination, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        lblProgressBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/progress.png"))); // NOI18N
        lblProgressBar.setText(bundle.getString("FormPrincipal.lblProgressBar.text")); // NOI18N
        getContentPane().add(lblProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 386, 0, -1));

        btnBrowseFile.setBackground(new java.awt.Color(204, 204, 204));
        btnBrowseFile.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        btnBrowseFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBrowseFile.setText(bundle.getString("FormPrincipal.btnBrowseFile.text")); // NOI18N
        btnBrowseFile.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnBrowseFile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 2));
        btnBrowseFile.setOpaque(true);
        btnBrowseFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBrowseFileMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBrowseFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBrowseFileMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBrowseFileMouseReleased(evt);
            }
        });
        getContentPane().add(btnBrowseFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 150, 90, 22));

        lblBgSelectFile.setBackground(new java.awt.Color(194, 53, 53));
        lblBgSelectFile.setText(bundle.getString("FormPrincipal.lblBgSelectFile.text")); // NOI18N
        lblBgSelectFile.setOpaque(true);
        getContentPane().add(lblBgSelectFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 560, 260));

        lblProgressBarBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/progressBar.png"))); // NOI18N
        lblProgressBarBg.setText(bundle.getString("FormPrincipal.lblProgressBarBg.text")); // NOI18N
        getContentPane().add(lblProgressBarBg, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 551, 42));

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(bundle.getString("FormPrincipal.jLabel1.text")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        lblQueueBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/queueBg.png"))); // NOI18N
        lblQueueBg.setText(bundle.getString("FormPrincipal.lblQueueBg.text")); // NOI18N
        getContentPane().add(lblQueueBg, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 145, -1, -1));

        lblGalo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/galo.png"))); // NOI18N
        lblGalo.setText(bundle.getString("FormPrincipal.lblGalo.text")); // NOI18N
        getContentPane().add(lblGalo, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, -30, 310, 360));

        lblBackground.setBackground(new java.awt.Color(224, 68, 68));
        lblBackground.setForeground(new java.awt.Color(224, 68, 68));
        lblBackground.setText(bundle.getString("FormPrincipal.lblBackground.text")); // NOI18N
        lblBackground.setOpaque(true);
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 710));

        setSize(new java.awt.Dimension(866, 476));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBrowseFileMouseClicked
        if (!btnBrowseFile.isEnabled()) {
            return;
        }
        this.btnMouseClicked(btnBrowseFile);

        int ret = fileChooser.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            txtFileOriginPath.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_btnBrowseFileMouseClicked

    private void btnBrowseFileMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBrowseFileMouseReleased
        if (!btnBrowseFile.isEnabled()) {
            return;
        }
        this.btnBrowseFileMouseEntered(evt);
    }//GEN-LAST:event_btnBrowseFileMouseReleased

    private void btnBrowseFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBrowseFileMouseEntered
        if (!btnBrowseFile.isEnabled()) {
            return;
        }
        this.btnMouseEntered(btnBrowseFile);
    }//GEN-LAST:event_btnBrowseFileMouseEntered

    private void btnBrowseFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBrowseFileMouseExited
        if (!btnBrowseFile.isEnabled()) {
            return;
        }
        this.btnMouseExited(btnBrowseFile);
    }//GEN-LAST:event_btnBrowseFileMouseExited

    private void btnCompressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompressMouseClicked
        if (!btnCompress.isEnabled()) {
            return;
        }
        this.btnMouseClicked(btnCompress);
        addJob('c');
    }//GEN-LAST:event_btnCompressMouseClicked

    private void btnCompressMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompressMouseEntered
        if (!btnCompress.isEnabled()) {
            return;
        }
        this.btnMouseEntered(btnCompress);
    }//GEN-LAST:event_btnCompressMouseEntered

    private void btnCompressMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompressMouseExited
        if (!btnCompress.isEnabled()) {
            return;
        }
        this.btnMouseExited(btnCompress);
    }//GEN-LAST:event_btnCompressMouseExited

    private void btnCompressMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompressMouseReleased
        if (!btnCompress.isEnabled()) {
            return;
        }
        this.btnCompressMouseEntered(evt);
    }//GEN-LAST:event_btnCompressMouseReleased

    private void btnBrowseDestinationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBrowseDestinationMouseClicked
        this.btnMouseClicked(btnBrowseDestination);
        
        int ret = fchooser.showSaveDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            String pathString = fchooser.getSelectedFile().getAbsolutePath();

            Path path = Paths.get(pathString);
            File arq = new File(pathString);
            boolean teste = Files.exists(path);
            if (Files.exists(path) && arq.isDirectory()) {
                txtDestination.setText(pathString);
            } else {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Por favor, informe um diretório válido", "Diretório inválido", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnBrowseDestinationMouseClicked

    private void btnBrowseDestinationMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBrowseDestinationMouseEntered
        this.btnMouseEntered(btnBrowseDestination);
    }//GEN-LAST:event_btnBrowseDestinationMouseEntered

    private void btnBrowseDestinationMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBrowseDestinationMouseExited
        this.btnMouseExited(btnBrowseDestination);
    }//GEN-LAST:event_btnBrowseDestinationMouseExited

    private void btnBrowseDestinationMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBrowseDestinationMouseReleased
        this.btnBrowseDestinationMouseEntered(evt);
    }//GEN-LAST:event_btnBrowseDestinationMouseReleased

    private void btnDecompressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecompressMouseClicked
        this.btnMouseClicked(btnDecompress);
        addJob('d');
    }//GEN-LAST:event_btnDecompressMouseClicked

    private void btnDecompressMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecompressMouseEntered
        this.btnMouseEntered(btnDecompress);
    }//GEN-LAST:event_btnDecompressMouseEntered

    private void btnDecompressMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecompressMouseExited
        this.btnMouseExited(btnDecompress);
    }//GEN-LAST:event_btnDecompressMouseExited

    private void btnDecompressMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecompressMouseReleased
        this.btnDecompressMouseEntered(evt);
    }//GEN-LAST:event_btnDecompressMouseReleased

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        jq.setSlots(Integer.parseInt(jComboBox1.getSelectedItem().toString()));
        jq.requestUpdate(lm);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(FormPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> {
            new FormPrincipal().setVisible(true);
        });
    }

    public void addJob(char op) {
        String originPath = txtFileOriginPath.getText();
        File file = new File(originPath);
        if (file.exists() && !file.isDirectory()) {
            String pathString = txtDestination.getText();
            Path path = Paths.get(pathString);
            File arq = new File(pathString);
            if (Files.exists(path) && arq.isDirectory()) {
                HuffJob hj = new HuffJob();
                hj.setOrigin(originPath);
                if (pathString.charAt(pathString.length() - 1) != File.separator.charAt(0)) {
                    pathString += File.separator;
                }
                if (op == 'c')
                    hj.setDestination(pathString + file.getName() + ".huff");
                else
                    hj.setDestination(pathString + file.getName().replaceAll(".huff$", ""));
                hj.setOperation(op);
                hj.setProgress(0);
                hj.setStatus("Pendente");
                jq.addJob(hj, lm);
            } else {                
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Por favor, informe um diretório de destino válido", "Diretório inválido", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Por favor, reveja o arquivo de origem informado", "Arquivo inválido", JOptionPane.WARNING_MESSAGE);
        }
    }

    public void addJob(char op, String from, String to) {
        HuffJob hj = new HuffJob();
        hj.setOrigin(from);
        hj.setDestination(to);
        hj.setOperation(op);
        hj.setProgress(0);
        hj.setStatus("Pendente");
        jq.addJob(hj, lm);
    }

    public void notify(int progresso) {
        this.setProgress(progresso);
        Frame[] forms = Frame.getFrames();
        for (Frame f : forms) {
            if (f instanceof FormDetalhes)
                ((FormDetalhes)f).callForm();
        }
    }

    private void btnMouseEntered(JLabel lbl) {
        Color bg = new Color(155, 155, 155);
        lbl.setBackground(bg);
    }

    private void btnMouseClicked(JLabel lbl) {
        Color bg = new Color(112, 112, 112);
        lbl.setBackground(bg);
    }

    private void btnMouseExited(JLabel lbl) {
        Color bg = new Color(204, 204, 204);
        lbl.setBackground(bg);
    }

    private void setProgress(int p) {
        this.progress = p;
        if (this.progress > 100) {
            progress = 100;
        }
        float percent = this.progress / 100.0f;
        lblProgressBar.setSize((int) (percent * lblProgressBar.getIcon().getIconWidth()), lblProgressBar.getHeight());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnBrowseDestination;
    private javax.swing.JLabel btnBrowseFile;
    private javax.swing.JLabel btnCompress;
    private javax.swing.JLabel btnDecompress;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JFileChooser folderChooser;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelSelectFile;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBgSelectFile;
    private javax.swing.JLabel lblGalo;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblProgressBar;
    private javax.swing.JLabel lblProgressBarBg;
    private javax.swing.JLabel lblQueueBg;
    private javax.swing.JLabel lblSelectDestination;
    private javax.swing.JLabel lblThreads;
    private javax.swing.JTextField txtDestination;
    private javax.swing.JTextField txtFileOriginPath;
    // End of variables declaration//GEN-END:variables
    private DefaultListModel<HuffmanProgram> lm = null;
}
